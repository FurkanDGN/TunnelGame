// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definitions.proto

package com.github.furkandgn.tunnelgame.common.proto;

/**
 * Protobuf type {@code com.github.furkandgn.tunnelgame.common.proto.ServerInfo}
 */
public  final class ServerInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.furkandgn.tunnelgame.common.proto.ServerInfo)
    ServerInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServerInfo.newBuilder() to construct.
  private ServerInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServerInfo() {
    sessions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ServerInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ServerInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.github.furkandgn.tunnelgame.common.proto.Server.Builder subBuilder = null;
            if (server_ != null) {
              subBuilder = server_.toBuilder();
            }
            server_ = input.readMessage(com.github.furkandgn.tunnelgame.common.proto.Server.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(server_);
              server_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sessions_ = new java.util.ArrayList<com.github.furkandgn.tunnelgame.common.proto.Session>();
              mutable_bitField0_ |= 0x00000001;
            }
            sessions_.add(
                input.readMessage(com.github.furkandgn.tunnelgame.common.proto.Session.parser(), extensionRegistry));
            break;
          }
          case 25: {

            tps_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sessions_ = java.util.Collections.unmodifiableList(sessions_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_ServerInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_ServerInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.furkandgn.tunnelgame.common.proto.ServerInfo.class, com.github.furkandgn.tunnelgame.common.proto.ServerInfo.Builder.class);
  }

  public static final int SERVER_FIELD_NUMBER = 1;
  private com.github.furkandgn.tunnelgame.common.proto.Server server_;
  /**
   * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
   * @return Whether the server field is set.
   */
  public boolean hasServer() {
    return server_ != null;
  }
  /**
   * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
   * @return The server.
   */
  public com.github.furkandgn.tunnelgame.common.proto.Server getServer() {
    return server_ == null ? com.github.furkandgn.tunnelgame.common.proto.Server.getDefaultInstance() : server_;
  }
  /**
   * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
   */
  public com.github.furkandgn.tunnelgame.common.proto.ServerOrBuilder getServerOrBuilder() {
    return getServer();
  }

  public static final int SESSIONS_FIELD_NUMBER = 2;
  private java.util.List<com.github.furkandgn.tunnelgame.common.proto.Session> sessions_;
  /**
   * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
   */
  public java.util.List<com.github.furkandgn.tunnelgame.common.proto.Session> getSessionsList() {
    return sessions_;
  }
  /**
   * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
   */
  public java.util.List<? extends com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder> 
      getSessionsOrBuilderList() {
    return sessions_;
  }
  /**
   * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
   */
  public int getSessionsCount() {
    return sessions_.size();
  }
  /**
   * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
   */
  public com.github.furkandgn.tunnelgame.common.proto.Session getSessions(int index) {
    return sessions_.get(index);
  }
  /**
   * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
   */
  public com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder getSessionsOrBuilder(
      int index) {
    return sessions_.get(index);
  }

  public static final int TPS_FIELD_NUMBER = 3;
  private double tps_;
  /**
   * <code>double tps = 3;</code>
   * @return The tps.
   */
  public double getTps() {
    return tps_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (server_ != null) {
      output.writeMessage(1, getServer());
    }
    for (int i = 0; i < sessions_.size(); i++) {
      output.writeMessage(2, sessions_.get(i));
    }
    if (tps_ != 0D) {
      output.writeDouble(3, tps_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (server_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getServer());
    }
    for (int i = 0; i < sessions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, sessions_.get(i));
    }
    if (tps_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, tps_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.furkandgn.tunnelgame.common.proto.ServerInfo)) {
      return super.equals(obj);
    }
    com.github.furkandgn.tunnelgame.common.proto.ServerInfo other = (com.github.furkandgn.tunnelgame.common.proto.ServerInfo) obj;

    if (hasServer() != other.hasServer()) return false;
    if (hasServer()) {
      if (!getServer()
          .equals(other.getServer())) return false;
    }
    if (!getSessionsList()
        .equals(other.getSessionsList())) return false;
    if (java.lang.Double.doubleToLongBits(getTps())
        != java.lang.Double.doubleToLongBits(
            other.getTps())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasServer()) {
      hash = (37 * hash) + SERVER_FIELD_NUMBER;
      hash = (53 * hash) + getServer().hashCode();
    }
    if (getSessionsCount() > 0) {
      hash = (37 * hash) + SESSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSessionsList().hashCode();
    }
    hash = (37 * hash) + TPS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTps()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.furkandgn.tunnelgame.common.proto.ServerInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.furkandgn.tunnelgame.common.proto.ServerInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.furkandgn.tunnelgame.common.proto.ServerInfo)
      com.github.furkandgn.tunnelgame.common.proto.ServerInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_ServerInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_ServerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.furkandgn.tunnelgame.common.proto.ServerInfo.class, com.github.furkandgn.tunnelgame.common.proto.ServerInfo.Builder.class);
    }

    // Construct using com.github.furkandgn.tunnelgame.common.proto.ServerInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSessionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (serverBuilder_ == null) {
        server_ = null;
      } else {
        server_ = null;
        serverBuilder_ = null;
      }
      if (sessionsBuilder_ == null) {
        sessions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        sessionsBuilder_.clear();
      }
      tps_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_ServerInfo_descriptor;
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.ServerInfo getDefaultInstanceForType() {
      return com.github.furkandgn.tunnelgame.common.proto.ServerInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.ServerInfo build() {
      com.github.furkandgn.tunnelgame.common.proto.ServerInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.ServerInfo buildPartial() {
      com.github.furkandgn.tunnelgame.common.proto.ServerInfo result = new com.github.furkandgn.tunnelgame.common.proto.ServerInfo(this);
      int from_bitField0_ = bitField0_;
      if (serverBuilder_ == null) {
        result.server_ = server_;
      } else {
        result.server_ = serverBuilder_.build();
      }
      if (sessionsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sessions_ = java.util.Collections.unmodifiableList(sessions_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sessions_ = sessions_;
      } else {
        result.sessions_ = sessionsBuilder_.build();
      }
      result.tps_ = tps_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.furkandgn.tunnelgame.common.proto.ServerInfo) {
        return mergeFrom((com.github.furkandgn.tunnelgame.common.proto.ServerInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.furkandgn.tunnelgame.common.proto.ServerInfo other) {
      if (other == com.github.furkandgn.tunnelgame.common.proto.ServerInfo.getDefaultInstance()) return this;
      if (other.hasServer()) {
        mergeServer(other.getServer());
      }
      if (sessionsBuilder_ == null) {
        if (!other.sessions_.isEmpty()) {
          if (sessions_.isEmpty()) {
            sessions_ = other.sessions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSessionsIsMutable();
            sessions_.addAll(other.sessions_);
          }
          onChanged();
        }
      } else {
        if (!other.sessions_.isEmpty()) {
          if (sessionsBuilder_.isEmpty()) {
            sessionsBuilder_.dispose();
            sessionsBuilder_ = null;
            sessions_ = other.sessions_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sessionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSessionsFieldBuilder() : null;
          } else {
            sessionsBuilder_.addAllMessages(other.sessions_);
          }
        }
      }
      if (other.getTps() != 0D) {
        setTps(other.getTps());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.furkandgn.tunnelgame.common.proto.ServerInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.furkandgn.tunnelgame.common.proto.ServerInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.github.furkandgn.tunnelgame.common.proto.Server server_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.furkandgn.tunnelgame.common.proto.Server, com.github.furkandgn.tunnelgame.common.proto.Server.Builder, com.github.furkandgn.tunnelgame.common.proto.ServerOrBuilder> serverBuilder_;
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     * @return Whether the server field is set.
     */
    public boolean hasServer() {
      return serverBuilder_ != null || server_ != null;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     * @return The server.
     */
    public com.github.furkandgn.tunnelgame.common.proto.Server getServer() {
      if (serverBuilder_ == null) {
        return server_ == null ? com.github.furkandgn.tunnelgame.common.proto.Server.getDefaultInstance() : server_;
      } else {
        return serverBuilder_.getMessage();
      }
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public Builder setServer(com.github.furkandgn.tunnelgame.common.proto.Server value) {
      if (serverBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        server_ = value;
        onChanged();
      } else {
        serverBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public Builder setServer(
        com.github.furkandgn.tunnelgame.common.proto.Server.Builder builderForValue) {
      if (serverBuilder_ == null) {
        server_ = builderForValue.build();
        onChanged();
      } else {
        serverBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public Builder mergeServer(com.github.furkandgn.tunnelgame.common.proto.Server value) {
      if (serverBuilder_ == null) {
        if (server_ != null) {
          server_ =
            com.github.furkandgn.tunnelgame.common.proto.Server.newBuilder(server_).mergeFrom(value).buildPartial();
        } else {
          server_ = value;
        }
        onChanged();
      } else {
        serverBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public Builder clearServer() {
      if (serverBuilder_ == null) {
        server_ = null;
        onChanged();
      } else {
        server_ = null;
        serverBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.Server.Builder getServerBuilder() {
      
      onChanged();
      return getServerFieldBuilder().getBuilder();
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.ServerOrBuilder getServerOrBuilder() {
      if (serverBuilder_ != null) {
        return serverBuilder_.getMessageOrBuilder();
      } else {
        return server_ == null ?
            com.github.furkandgn.tunnelgame.common.proto.Server.getDefaultInstance() : server_;
      }
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.Server server = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.github.furkandgn.tunnelgame.common.proto.Server, com.github.furkandgn.tunnelgame.common.proto.Server.Builder, com.github.furkandgn.tunnelgame.common.proto.ServerOrBuilder> 
        getServerFieldBuilder() {
      if (serverBuilder_ == null) {
        serverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.github.furkandgn.tunnelgame.common.proto.Server, com.github.furkandgn.tunnelgame.common.proto.Server.Builder, com.github.furkandgn.tunnelgame.common.proto.ServerOrBuilder>(
                getServer(),
                getParentForChildren(),
                isClean());
        server_ = null;
      }
      return serverBuilder_;
    }

    private java.util.List<com.github.furkandgn.tunnelgame.common.proto.Session> sessions_ =
      java.util.Collections.emptyList();
    private void ensureSessionsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sessions_ = new java.util.ArrayList<com.github.furkandgn.tunnelgame.common.proto.Session>(sessions_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.furkandgn.tunnelgame.common.proto.Session, com.github.furkandgn.tunnelgame.common.proto.Session.Builder, com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder> sessionsBuilder_;

    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public java.util.List<com.github.furkandgn.tunnelgame.common.proto.Session> getSessionsList() {
      if (sessionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sessions_);
      } else {
        return sessionsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public int getSessionsCount() {
      if (sessionsBuilder_ == null) {
        return sessions_.size();
      } else {
        return sessionsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.Session getSessions(int index) {
      if (sessionsBuilder_ == null) {
        return sessions_.get(index);
      } else {
        return sessionsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder setSessions(
        int index, com.github.furkandgn.tunnelgame.common.proto.Session value) {
      if (sessionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionsIsMutable();
        sessions_.set(index, value);
        onChanged();
      } else {
        sessionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder setSessions(
        int index, com.github.furkandgn.tunnelgame.common.proto.Session.Builder builderForValue) {
      if (sessionsBuilder_ == null) {
        ensureSessionsIsMutable();
        sessions_.set(index, builderForValue.build());
        onChanged();
      } else {
        sessionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder addSessions(com.github.furkandgn.tunnelgame.common.proto.Session value) {
      if (sessionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionsIsMutable();
        sessions_.add(value);
        onChanged();
      } else {
        sessionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder addSessions(
        int index, com.github.furkandgn.tunnelgame.common.proto.Session value) {
      if (sessionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionsIsMutable();
        sessions_.add(index, value);
        onChanged();
      } else {
        sessionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder addSessions(
        com.github.furkandgn.tunnelgame.common.proto.Session.Builder builderForValue) {
      if (sessionsBuilder_ == null) {
        ensureSessionsIsMutable();
        sessions_.add(builderForValue.build());
        onChanged();
      } else {
        sessionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder addSessions(
        int index, com.github.furkandgn.tunnelgame.common.proto.Session.Builder builderForValue) {
      if (sessionsBuilder_ == null) {
        ensureSessionsIsMutable();
        sessions_.add(index, builderForValue.build());
        onChanged();
      } else {
        sessionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder addAllSessions(
        java.lang.Iterable<? extends com.github.furkandgn.tunnelgame.common.proto.Session> values) {
      if (sessionsBuilder_ == null) {
        ensureSessionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sessions_);
        onChanged();
      } else {
        sessionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder clearSessions() {
      if (sessionsBuilder_ == null) {
        sessions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sessionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public Builder removeSessions(int index) {
      if (sessionsBuilder_ == null) {
        ensureSessionsIsMutable();
        sessions_.remove(index);
        onChanged();
      } else {
        sessionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.Session.Builder getSessionsBuilder(
        int index) {
      return getSessionsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder getSessionsOrBuilder(
        int index) {
      if (sessionsBuilder_ == null) {
        return sessions_.get(index);  } else {
        return sessionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public java.util.List<? extends com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder> 
         getSessionsOrBuilderList() {
      if (sessionsBuilder_ != null) {
        return sessionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sessions_);
      }
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.Session.Builder addSessionsBuilder() {
      return getSessionsFieldBuilder().addBuilder(
          com.github.furkandgn.tunnelgame.common.proto.Session.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public com.github.furkandgn.tunnelgame.common.proto.Session.Builder addSessionsBuilder(
        int index) {
      return getSessionsFieldBuilder().addBuilder(
          index, com.github.furkandgn.tunnelgame.common.proto.Session.getDefaultInstance());
    }
    /**
     * <code>repeated .com.github.furkandgn.tunnelgame.common.proto.Session sessions = 2;</code>
     */
    public java.util.List<com.github.furkandgn.tunnelgame.common.proto.Session.Builder> 
         getSessionsBuilderList() {
      return getSessionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.github.furkandgn.tunnelgame.common.proto.Session, com.github.furkandgn.tunnelgame.common.proto.Session.Builder, com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder> 
        getSessionsFieldBuilder() {
      if (sessionsBuilder_ == null) {
        sessionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.github.furkandgn.tunnelgame.common.proto.Session, com.github.furkandgn.tunnelgame.common.proto.Session.Builder, com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder>(
                sessions_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sessions_ = null;
      }
      return sessionsBuilder_;
    }

    private double tps_ ;
    /**
     * <code>double tps = 3;</code>
     * @return The tps.
     */
    public double getTps() {
      return tps_;
    }
    /**
     * <code>double tps = 3;</code>
     * @param value The tps to set.
     * @return This builder for chaining.
     */
    public Builder setTps(double value) {
      
      tps_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double tps = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTps() {
      
      tps_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.furkandgn.tunnelgame.common.proto.ServerInfo)
  }

  // @@protoc_insertion_point(class_scope:com.github.furkandgn.tunnelgame.common.proto.ServerInfo)
  private static final com.github.furkandgn.tunnelgame.common.proto.ServerInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.furkandgn.tunnelgame.common.proto.ServerInfo();
  }

  public static com.github.furkandgn.tunnelgame.common.proto.ServerInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerInfo>
      PARSER = new com.google.protobuf.AbstractParser<ServerInfo>() {
    @java.lang.Override
    public ServerInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ServerInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ServerInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServerInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.furkandgn.tunnelgame.common.proto.ServerInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

