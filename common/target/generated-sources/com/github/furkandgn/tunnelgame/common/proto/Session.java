// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: definitions.proto

package com.github.furkandgn.tunnelgame.common.proto;

/**
 * Protobuf type {@code com.github.furkandgn.tunnelgame.common.proto.Session}
 */
public  final class Session extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.github.furkandgn.tunnelgame.common.proto.Session)
    SessionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Session.newBuilder() to construct.
  private Session(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Session() {
    gameState_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Session();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Session(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            id_ = input.readInt32();
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            gameState_ = rawValue;
            break;
          }
          case 24: {

            playerCount_ = input.readSInt32();
            break;
          }
          case 32: {

            maxPlayerCount_ = input.readSInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_Session_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_Session_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.github.furkandgn.tunnelgame.common.proto.Session.class, com.github.furkandgn.tunnelgame.common.proto.Session.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private int id_;
  /**
   * <code>int32 id = 1;</code>
   * @return The id.
   */
  public int getId() {
    return id_;
  }

  public static final int GAME_STATE_FIELD_NUMBER = 2;
  private int gameState_;
  /**
   * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
   * @return The enum numeric value on the wire for gameState.
   */
  public int getGameStateValue() {
    return gameState_;
  }
  /**
   * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
   * @return The gameState.
   */
  public com.github.furkandgn.tunnelgame.common.proto.GameState getGameState() {
    @SuppressWarnings("deprecation")
    com.github.furkandgn.tunnelgame.common.proto.GameState result = com.github.furkandgn.tunnelgame.common.proto.GameState.valueOf(gameState_);
    return result == null ? com.github.furkandgn.tunnelgame.common.proto.GameState.UNRECOGNIZED : result;
  }

  public static final int PLAYER_COUNT_FIELD_NUMBER = 3;
  private int playerCount_;
  /**
   * <code>sint32 player_count = 3;</code>
   * @return The playerCount.
   */
  public int getPlayerCount() {
    return playerCount_;
  }

  public static final int MAX_PLAYER_COUNT_FIELD_NUMBER = 4;
  private int maxPlayerCount_;
  /**
   * <code>sint32 max_player_count = 4;</code>
   * @return The maxPlayerCount.
   */
  public int getMaxPlayerCount() {
    return maxPlayerCount_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0) {
      output.writeInt32(1, id_);
    }
    if (gameState_ != com.github.furkandgn.tunnelgame.common.proto.GameState.GAME_STATE_IN_GAME.getNumber()) {
      output.writeEnum(2, gameState_);
    }
    if (playerCount_ != 0) {
      output.writeSInt32(3, playerCount_);
    }
    if (maxPlayerCount_ != 0) {
      output.writeSInt32(4, maxPlayerCount_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, id_);
    }
    if (gameState_ != com.github.furkandgn.tunnelgame.common.proto.GameState.GAME_STATE_IN_GAME.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, gameState_);
    }
    if (playerCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(3, playerCount_);
    }
    if (maxPlayerCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(4, maxPlayerCount_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.github.furkandgn.tunnelgame.common.proto.Session)) {
      return super.equals(obj);
    }
    com.github.furkandgn.tunnelgame.common.proto.Session other = (com.github.furkandgn.tunnelgame.common.proto.Session) obj;

    if (getId()
        != other.getId()) return false;
    if (gameState_ != other.gameState_) return false;
    if (getPlayerCount()
        != other.getPlayerCount()) return false;
    if (getMaxPlayerCount()
        != other.getMaxPlayerCount()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + GAME_STATE_FIELD_NUMBER;
    hash = (53 * hash) + gameState_;
    hash = (37 * hash) + PLAYER_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getPlayerCount();
    hash = (37 * hash) + MAX_PLAYER_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPlayerCount();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.github.furkandgn.tunnelgame.common.proto.Session parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.github.furkandgn.tunnelgame.common.proto.Session prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.github.furkandgn.tunnelgame.common.proto.Session}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.github.furkandgn.tunnelgame.common.proto.Session)
      com.github.furkandgn.tunnelgame.common.proto.SessionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_Session_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_Session_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.furkandgn.tunnelgame.common.proto.Session.class, com.github.furkandgn.tunnelgame.common.proto.Session.Builder.class);
    }

    // Construct using com.github.furkandgn.tunnelgame.common.proto.Session.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = 0;

      gameState_ = 0;

      playerCount_ = 0;

      maxPlayerCount_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.github.furkandgn.tunnelgame.common.proto.Definition.internal_static_com_github_furkandgn_tunnelgame_common_proto_Session_descriptor;
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.Session getDefaultInstanceForType() {
      return com.github.furkandgn.tunnelgame.common.proto.Session.getDefaultInstance();
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.Session build() {
      com.github.furkandgn.tunnelgame.common.proto.Session result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.github.furkandgn.tunnelgame.common.proto.Session buildPartial() {
      com.github.furkandgn.tunnelgame.common.proto.Session result = new com.github.furkandgn.tunnelgame.common.proto.Session(this);
      result.id_ = id_;
      result.gameState_ = gameState_;
      result.playerCount_ = playerCount_;
      result.maxPlayerCount_ = maxPlayerCount_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.github.furkandgn.tunnelgame.common.proto.Session) {
        return mergeFrom((com.github.furkandgn.tunnelgame.common.proto.Session)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.github.furkandgn.tunnelgame.common.proto.Session other) {
      if (other == com.github.furkandgn.tunnelgame.common.proto.Session.getDefaultInstance()) return this;
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (other.gameState_ != 0) {
        setGameStateValue(other.getGameStateValue());
      }
      if (other.getPlayerCount() != 0) {
        setPlayerCount(other.getPlayerCount());
      }
      if (other.getMaxPlayerCount() != 0) {
        setMaxPlayerCount(other.getMaxPlayerCount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.github.furkandgn.tunnelgame.common.proto.Session parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.github.furkandgn.tunnelgame.common.proto.Session) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int id_ ;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>int32 id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private int gameState_ = 0;
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
     * @return The enum numeric value on the wire for gameState.
     */
    public int getGameStateValue() {
      return gameState_;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
     * @param value The enum numeric value on the wire for gameState to set.
     * @return This builder for chaining.
     */
    public Builder setGameStateValue(int value) {
      gameState_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
     * @return The gameState.
     */
    public com.github.furkandgn.tunnelgame.common.proto.GameState getGameState() {
      @SuppressWarnings("deprecation")
      com.github.furkandgn.tunnelgame.common.proto.GameState result = com.github.furkandgn.tunnelgame.common.proto.GameState.valueOf(gameState_);
      return result == null ? com.github.furkandgn.tunnelgame.common.proto.GameState.UNRECOGNIZED : result;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
     * @param value The gameState to set.
     * @return This builder for chaining.
     */
    public Builder setGameState(com.github.furkandgn.tunnelgame.common.proto.GameState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      gameState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.com.github.furkandgn.tunnelgame.common.proto.GameState game_state = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearGameState() {
      
      gameState_ = 0;
      onChanged();
      return this;
    }

    private int playerCount_ ;
    /**
     * <code>sint32 player_count = 3;</code>
     * @return The playerCount.
     */
    public int getPlayerCount() {
      return playerCount_;
    }
    /**
     * <code>sint32 player_count = 3;</code>
     * @param value The playerCount to set.
     * @return This builder for chaining.
     */
    public Builder setPlayerCount(int value) {
      
      playerCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 player_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlayerCount() {
      
      playerCount_ = 0;
      onChanged();
      return this;
    }

    private int maxPlayerCount_ ;
    /**
     * <code>sint32 max_player_count = 4;</code>
     * @return The maxPlayerCount.
     */
    public int getMaxPlayerCount() {
      return maxPlayerCount_;
    }
    /**
     * <code>sint32 max_player_count = 4;</code>
     * @param value The maxPlayerCount to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPlayerCount(int value) {
      
      maxPlayerCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 max_player_count = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxPlayerCount() {
      
      maxPlayerCount_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.github.furkandgn.tunnelgame.common.proto.Session)
  }

  // @@protoc_insertion_point(class_scope:com.github.furkandgn.tunnelgame.common.proto.Session)
  private static final com.github.furkandgn.tunnelgame.common.proto.Session DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.github.furkandgn.tunnelgame.common.proto.Session();
  }

  public static com.github.furkandgn.tunnelgame.common.proto.Session getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Session>
      PARSER = new com.google.protobuf.AbstractParser<Session>() {
    @java.lang.Override
    public Session parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Session(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Session> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Session> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.github.furkandgn.tunnelgame.common.proto.Session getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

